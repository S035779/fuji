/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.s035779.fuji.item;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-12-06")
public class Item implements org.apache.thrift.TBase<Item, Item._Fields>, java.io.Serializable, Cloneable, Comparable<Item> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Item");

  private static final org.apache.thrift.protocol.TField RANK_FIELD_DESC = new org.apache.thrift.protocol.TField("Rank", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField ASIN_FIELD_DESC = new org.apache.thrift.protocol.TField("ASIN", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField TITLE_FIELD_DESC = new org.apache.thrift.protocol.TField("Title", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField RELEASE_FIELD_DESC = new org.apache.thrift.protocol.TField("Release", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ITEM_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("ItemUrl", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField IMAGE_URL_FIELD_DESC = new org.apache.thrift.protocol.TField("ImageUrl", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField LIST_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("ListPrice", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField LOWEST_NEW_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("LowestNewPrice", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField LOWEST_USED_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("LowestUsedPrice", org.apache.thrift.protocol.TType.I64, (short)9);
  private static final org.apache.thrift.protocol.TField OFFER_PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("OfferPrice", org.apache.thrift.protocol.TType.I64, (short)10);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ItemStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ItemTupleSchemeFactory();

  public long Rank; // required
  public java.lang.String ASIN; // required
  public java.lang.String Title; // required
  public java.lang.String Release; // required
  public java.lang.String ItemUrl; // required
  public java.lang.String ImageUrl; // required
  public long ListPrice; // required
  public long LowestNewPrice; // required
  public long LowestUsedPrice; // required
  public long OfferPrice; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    RANK((short)1, "Rank"),
    ASIN((short)2, "ASIN"),
    TITLE((short)3, "Title"),
    RELEASE((short)4, "Release"),
    ITEM_URL((short)5, "ItemUrl"),
    IMAGE_URL((short)6, "ImageUrl"),
    LIST_PRICE((short)7, "ListPrice"),
    LOWEST_NEW_PRICE((short)8, "LowestNewPrice"),
    LOWEST_USED_PRICE((short)9, "LowestUsedPrice"),
    OFFER_PRICE((short)10, "OfferPrice");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // RANK
          return RANK;
        case 2: // ASIN
          return ASIN;
        case 3: // TITLE
          return TITLE;
        case 4: // RELEASE
          return RELEASE;
        case 5: // ITEM_URL
          return ITEM_URL;
        case 6: // IMAGE_URL
          return IMAGE_URL;
        case 7: // LIST_PRICE
          return LIST_PRICE;
        case 8: // LOWEST_NEW_PRICE
          return LOWEST_NEW_PRICE;
        case 9: // LOWEST_USED_PRICE
          return LOWEST_USED_PRICE;
        case 10: // OFFER_PRICE
          return OFFER_PRICE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __RANK_ISSET_ID = 0;
  private static final int __LISTPRICE_ISSET_ID = 1;
  private static final int __LOWESTNEWPRICE_ISSET_ID = 2;
  private static final int __LOWESTUSEDPRICE_ISSET_ID = 3;
  private static final int __OFFERPRICE_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.RANK, new org.apache.thrift.meta_data.FieldMetaData("Rank", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ASIN, new org.apache.thrift.meta_data.FieldMetaData("ASIN", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.TITLE, new org.apache.thrift.meta_data.FieldMetaData("Title", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.RELEASE, new org.apache.thrift.meta_data.FieldMetaData("Release", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ITEM_URL, new org.apache.thrift.meta_data.FieldMetaData("ItemUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IMAGE_URL, new org.apache.thrift.meta_data.FieldMetaData("ImageUrl", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LIST_PRICE, new org.apache.thrift.meta_data.FieldMetaData("ListPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LOWEST_NEW_PRICE, new org.apache.thrift.meta_data.FieldMetaData("LowestNewPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LOWEST_USED_PRICE, new org.apache.thrift.meta_data.FieldMetaData("LowestUsedPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.OFFER_PRICE, new org.apache.thrift.meta_data.FieldMetaData("OfferPrice", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Item.class, metaDataMap);
  }

  public Item() {
  }

  public Item(
    long Rank,
    java.lang.String ASIN,
    java.lang.String Title,
    java.lang.String Release,
    java.lang.String ItemUrl,
    java.lang.String ImageUrl,
    long ListPrice,
    long LowestNewPrice,
    long LowestUsedPrice,
    long OfferPrice)
  {
    this();
    this.Rank = Rank;
    setRankIsSet(true);
    this.ASIN = ASIN;
    this.Title = Title;
    this.Release = Release;
    this.ItemUrl = ItemUrl;
    this.ImageUrl = ImageUrl;
    this.ListPrice = ListPrice;
    setListPriceIsSet(true);
    this.LowestNewPrice = LowestNewPrice;
    setLowestNewPriceIsSet(true);
    this.LowestUsedPrice = LowestUsedPrice;
    setLowestUsedPriceIsSet(true);
    this.OfferPrice = OfferPrice;
    setOfferPriceIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Item(Item other) {
    __isset_bitfield = other.__isset_bitfield;
    this.Rank = other.Rank;
    if (other.isSetASIN()) {
      this.ASIN = other.ASIN;
    }
    if (other.isSetTitle()) {
      this.Title = other.Title;
    }
    if (other.isSetRelease()) {
      this.Release = other.Release;
    }
    if (other.isSetItemUrl()) {
      this.ItemUrl = other.ItemUrl;
    }
    if (other.isSetImageUrl()) {
      this.ImageUrl = other.ImageUrl;
    }
    this.ListPrice = other.ListPrice;
    this.LowestNewPrice = other.LowestNewPrice;
    this.LowestUsedPrice = other.LowestUsedPrice;
    this.OfferPrice = other.OfferPrice;
  }

  public Item deepCopy() {
    return new Item(this);
  }

  @Override
  public void clear() {
    setRankIsSet(false);
    this.Rank = 0;
    this.ASIN = null;
    this.Title = null;
    this.Release = null;
    this.ItemUrl = null;
    this.ImageUrl = null;
    setListPriceIsSet(false);
    this.ListPrice = 0;
    setLowestNewPriceIsSet(false);
    this.LowestNewPrice = 0;
    setLowestUsedPriceIsSet(false);
    this.LowestUsedPrice = 0;
    setOfferPriceIsSet(false);
    this.OfferPrice = 0;
  }

  public long getRank() {
    return this.Rank;
  }

  public Item setRank(long Rank) {
    this.Rank = Rank;
    setRankIsSet(true);
    return this;
  }

  public void unsetRank() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __RANK_ISSET_ID);
  }

  /** Returns true if field Rank is set (has been assigned a value) and false otherwise */
  public boolean isSetRank() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __RANK_ISSET_ID);
  }

  public void setRankIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __RANK_ISSET_ID, value);
  }

  public java.lang.String getASIN() {
    return this.ASIN;
  }

  public Item setASIN(java.lang.String ASIN) {
    this.ASIN = ASIN;
    return this;
  }

  public void unsetASIN() {
    this.ASIN = null;
  }

  /** Returns true if field ASIN is set (has been assigned a value) and false otherwise */
  public boolean isSetASIN() {
    return this.ASIN != null;
  }

  public void setASINIsSet(boolean value) {
    if (!value) {
      this.ASIN = null;
    }
  }

  public java.lang.String getTitle() {
    return this.Title;
  }

  public Item setTitle(java.lang.String Title) {
    this.Title = Title;
    return this;
  }

  public void unsetTitle() {
    this.Title = null;
  }

  /** Returns true if field Title is set (has been assigned a value) and false otherwise */
  public boolean isSetTitle() {
    return this.Title != null;
  }

  public void setTitleIsSet(boolean value) {
    if (!value) {
      this.Title = null;
    }
  }

  public java.lang.String getRelease() {
    return this.Release;
  }

  public Item setRelease(java.lang.String Release) {
    this.Release = Release;
    return this;
  }

  public void unsetRelease() {
    this.Release = null;
  }

  /** Returns true if field Release is set (has been assigned a value) and false otherwise */
  public boolean isSetRelease() {
    return this.Release != null;
  }

  public void setReleaseIsSet(boolean value) {
    if (!value) {
      this.Release = null;
    }
  }

  public java.lang.String getItemUrl() {
    return this.ItemUrl;
  }

  public Item setItemUrl(java.lang.String ItemUrl) {
    this.ItemUrl = ItemUrl;
    return this;
  }

  public void unsetItemUrl() {
    this.ItemUrl = null;
  }

  /** Returns true if field ItemUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetItemUrl() {
    return this.ItemUrl != null;
  }

  public void setItemUrlIsSet(boolean value) {
    if (!value) {
      this.ItemUrl = null;
    }
  }

  public java.lang.String getImageUrl() {
    return this.ImageUrl;
  }

  public Item setImageUrl(java.lang.String ImageUrl) {
    this.ImageUrl = ImageUrl;
    return this;
  }

  public void unsetImageUrl() {
    this.ImageUrl = null;
  }

  /** Returns true if field ImageUrl is set (has been assigned a value) and false otherwise */
  public boolean isSetImageUrl() {
    return this.ImageUrl != null;
  }

  public void setImageUrlIsSet(boolean value) {
    if (!value) {
      this.ImageUrl = null;
    }
  }

  public long getListPrice() {
    return this.ListPrice;
  }

  public Item setListPrice(long ListPrice) {
    this.ListPrice = ListPrice;
    setListPriceIsSet(true);
    return this;
  }

  public void unsetListPrice() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LISTPRICE_ISSET_ID);
  }

  /** Returns true if field ListPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetListPrice() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LISTPRICE_ISSET_ID);
  }

  public void setListPriceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LISTPRICE_ISSET_ID, value);
  }

  public long getLowestNewPrice() {
    return this.LowestNewPrice;
  }

  public Item setLowestNewPrice(long LowestNewPrice) {
    this.LowestNewPrice = LowestNewPrice;
    setLowestNewPriceIsSet(true);
    return this;
  }

  public void unsetLowestNewPrice() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LOWESTNEWPRICE_ISSET_ID);
  }

  /** Returns true if field LowestNewPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetLowestNewPrice() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LOWESTNEWPRICE_ISSET_ID);
  }

  public void setLowestNewPriceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LOWESTNEWPRICE_ISSET_ID, value);
  }

  public long getLowestUsedPrice() {
    return this.LowestUsedPrice;
  }

  public Item setLowestUsedPrice(long LowestUsedPrice) {
    this.LowestUsedPrice = LowestUsedPrice;
    setLowestUsedPriceIsSet(true);
    return this;
  }

  public void unsetLowestUsedPrice() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LOWESTUSEDPRICE_ISSET_ID);
  }

  /** Returns true if field LowestUsedPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetLowestUsedPrice() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LOWESTUSEDPRICE_ISSET_ID);
  }

  public void setLowestUsedPriceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LOWESTUSEDPRICE_ISSET_ID, value);
  }

  public long getOfferPrice() {
    return this.OfferPrice;
  }

  public Item setOfferPrice(long OfferPrice) {
    this.OfferPrice = OfferPrice;
    setOfferPriceIsSet(true);
    return this;
  }

  public void unsetOfferPrice() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __OFFERPRICE_ISSET_ID);
  }

  /** Returns true if field OfferPrice is set (has been assigned a value) and false otherwise */
  public boolean isSetOfferPrice() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __OFFERPRICE_ISSET_ID);
  }

  public void setOfferPriceIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __OFFERPRICE_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case RANK:
      if (value == null) {
        unsetRank();
      } else {
        setRank((java.lang.Long)value);
      }
      break;

    case ASIN:
      if (value == null) {
        unsetASIN();
      } else {
        setASIN((java.lang.String)value);
      }
      break;

    case TITLE:
      if (value == null) {
        unsetTitle();
      } else {
        setTitle((java.lang.String)value);
      }
      break;

    case RELEASE:
      if (value == null) {
        unsetRelease();
      } else {
        setRelease((java.lang.String)value);
      }
      break;

    case ITEM_URL:
      if (value == null) {
        unsetItemUrl();
      } else {
        setItemUrl((java.lang.String)value);
      }
      break;

    case IMAGE_URL:
      if (value == null) {
        unsetImageUrl();
      } else {
        setImageUrl((java.lang.String)value);
      }
      break;

    case LIST_PRICE:
      if (value == null) {
        unsetListPrice();
      } else {
        setListPrice((java.lang.Long)value);
      }
      break;

    case LOWEST_NEW_PRICE:
      if (value == null) {
        unsetLowestNewPrice();
      } else {
        setLowestNewPrice((java.lang.Long)value);
      }
      break;

    case LOWEST_USED_PRICE:
      if (value == null) {
        unsetLowestUsedPrice();
      } else {
        setLowestUsedPrice((java.lang.Long)value);
      }
      break;

    case OFFER_PRICE:
      if (value == null) {
        unsetOfferPrice();
      } else {
        setOfferPrice((java.lang.Long)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case RANK:
      return getRank();

    case ASIN:
      return getASIN();

    case TITLE:
      return getTitle();

    case RELEASE:
      return getRelease();

    case ITEM_URL:
      return getItemUrl();

    case IMAGE_URL:
      return getImageUrl();

    case LIST_PRICE:
      return getListPrice();

    case LOWEST_NEW_PRICE:
      return getLowestNewPrice();

    case LOWEST_USED_PRICE:
      return getLowestUsedPrice();

    case OFFER_PRICE:
      return getOfferPrice();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case RANK:
      return isSetRank();
    case ASIN:
      return isSetASIN();
    case TITLE:
      return isSetTitle();
    case RELEASE:
      return isSetRelease();
    case ITEM_URL:
      return isSetItemUrl();
    case IMAGE_URL:
      return isSetImageUrl();
    case LIST_PRICE:
      return isSetListPrice();
    case LOWEST_NEW_PRICE:
      return isSetLowestNewPrice();
    case LOWEST_USED_PRICE:
      return isSetLowestUsedPrice();
    case OFFER_PRICE:
      return isSetOfferPrice();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Item)
      return this.equals((Item)that);
    return false;
  }

  public boolean equals(Item that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_Rank = true;
    boolean that_present_Rank = true;
    if (this_present_Rank || that_present_Rank) {
      if (!(this_present_Rank && that_present_Rank))
        return false;
      if (this.Rank != that.Rank)
        return false;
    }

    boolean this_present_ASIN = true && this.isSetASIN();
    boolean that_present_ASIN = true && that.isSetASIN();
    if (this_present_ASIN || that_present_ASIN) {
      if (!(this_present_ASIN && that_present_ASIN))
        return false;
      if (!this.ASIN.equals(that.ASIN))
        return false;
    }

    boolean this_present_Title = true && this.isSetTitle();
    boolean that_present_Title = true && that.isSetTitle();
    if (this_present_Title || that_present_Title) {
      if (!(this_present_Title && that_present_Title))
        return false;
      if (!this.Title.equals(that.Title))
        return false;
    }

    boolean this_present_Release = true && this.isSetRelease();
    boolean that_present_Release = true && that.isSetRelease();
    if (this_present_Release || that_present_Release) {
      if (!(this_present_Release && that_present_Release))
        return false;
      if (!this.Release.equals(that.Release))
        return false;
    }

    boolean this_present_ItemUrl = true && this.isSetItemUrl();
    boolean that_present_ItemUrl = true && that.isSetItemUrl();
    if (this_present_ItemUrl || that_present_ItemUrl) {
      if (!(this_present_ItemUrl && that_present_ItemUrl))
        return false;
      if (!this.ItemUrl.equals(that.ItemUrl))
        return false;
    }

    boolean this_present_ImageUrl = true && this.isSetImageUrl();
    boolean that_present_ImageUrl = true && that.isSetImageUrl();
    if (this_present_ImageUrl || that_present_ImageUrl) {
      if (!(this_present_ImageUrl && that_present_ImageUrl))
        return false;
      if (!this.ImageUrl.equals(that.ImageUrl))
        return false;
    }

    boolean this_present_ListPrice = true;
    boolean that_present_ListPrice = true;
    if (this_present_ListPrice || that_present_ListPrice) {
      if (!(this_present_ListPrice && that_present_ListPrice))
        return false;
      if (this.ListPrice != that.ListPrice)
        return false;
    }

    boolean this_present_LowestNewPrice = true;
    boolean that_present_LowestNewPrice = true;
    if (this_present_LowestNewPrice || that_present_LowestNewPrice) {
      if (!(this_present_LowestNewPrice && that_present_LowestNewPrice))
        return false;
      if (this.LowestNewPrice != that.LowestNewPrice)
        return false;
    }

    boolean this_present_LowestUsedPrice = true;
    boolean that_present_LowestUsedPrice = true;
    if (this_present_LowestUsedPrice || that_present_LowestUsedPrice) {
      if (!(this_present_LowestUsedPrice && that_present_LowestUsedPrice))
        return false;
      if (this.LowestUsedPrice != that.LowestUsedPrice)
        return false;
    }

    boolean this_present_OfferPrice = true;
    boolean that_present_OfferPrice = true;
    if (this_present_OfferPrice || that_present_OfferPrice) {
      if (!(this_present_OfferPrice && that_present_OfferPrice))
        return false;
      if (this.OfferPrice != that.OfferPrice)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(Rank);

    hashCode = hashCode * 8191 + ((isSetASIN()) ? 131071 : 524287);
    if (isSetASIN())
      hashCode = hashCode * 8191 + ASIN.hashCode();

    hashCode = hashCode * 8191 + ((isSetTitle()) ? 131071 : 524287);
    if (isSetTitle())
      hashCode = hashCode * 8191 + Title.hashCode();

    hashCode = hashCode * 8191 + ((isSetRelease()) ? 131071 : 524287);
    if (isSetRelease())
      hashCode = hashCode * 8191 + Release.hashCode();

    hashCode = hashCode * 8191 + ((isSetItemUrl()) ? 131071 : 524287);
    if (isSetItemUrl())
      hashCode = hashCode * 8191 + ItemUrl.hashCode();

    hashCode = hashCode * 8191 + ((isSetImageUrl()) ? 131071 : 524287);
    if (isSetImageUrl())
      hashCode = hashCode * 8191 + ImageUrl.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(ListPrice);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(LowestNewPrice);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(LowestUsedPrice);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(OfferPrice);

    return hashCode;
  }

  @Override
  public int compareTo(Item other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetRank()).compareTo(other.isSetRank());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRank()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Rank, other.Rank);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetASIN()).compareTo(other.isSetASIN());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetASIN()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ASIN, other.ASIN);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetTitle()).compareTo(other.isSetTitle());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTitle()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Title, other.Title);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRelease()).compareTo(other.isSetRelease());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRelease()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.Release, other.Release);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetItemUrl()).compareTo(other.isSetItemUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetItemUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ItemUrl, other.ItemUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetImageUrl()).compareTo(other.isSetImageUrl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetImageUrl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ImageUrl, other.ImageUrl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetListPrice()).compareTo(other.isSetListPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetListPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ListPrice, other.ListPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLowestNewPrice()).compareTo(other.isSetLowestNewPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLowestNewPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.LowestNewPrice, other.LowestNewPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLowestUsedPrice()).compareTo(other.isSetLowestUsedPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLowestUsedPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.LowestUsedPrice, other.LowestUsedPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetOfferPrice()).compareTo(other.isSetOfferPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOfferPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.OfferPrice, other.OfferPrice);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Item(");
    boolean first = true;

    sb.append("Rank:");
    sb.append(this.Rank);
    first = false;
    if (!first) sb.append(", ");
    sb.append("ASIN:");
    if (this.ASIN == null) {
      sb.append("null");
    } else {
      sb.append(this.ASIN);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("Title:");
    if (this.Title == null) {
      sb.append("null");
    } else {
      sb.append(this.Title);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("Release:");
    if (this.Release == null) {
      sb.append("null");
    } else {
      sb.append(this.Release);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ItemUrl:");
    if (this.ItemUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.ItemUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ImageUrl:");
    if (this.ImageUrl == null) {
      sb.append("null");
    } else {
      sb.append(this.ImageUrl);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("ListPrice:");
    sb.append(this.ListPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("LowestNewPrice:");
    sb.append(this.LowestNewPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("LowestUsedPrice:");
    sb.append(this.LowestUsedPrice);
    first = false;
    if (!first) sb.append(", ");
    sb.append("OfferPrice:");
    sb.append(this.OfferPrice);
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ItemStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ItemStandardScheme getScheme() {
      return new ItemStandardScheme();
    }
  }

  private static class ItemStandardScheme extends org.apache.thrift.scheme.StandardScheme<Item> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Item struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // RANK
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.Rank = iprot.readI64();
              struct.setRankIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ASIN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ASIN = iprot.readString();
              struct.setASINIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TITLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Title = iprot.readString();
              struct.setTitleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // RELEASE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.Release = iprot.readString();
              struct.setReleaseIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ITEM_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ItemUrl = iprot.readString();
              struct.setItemUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // IMAGE_URL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.ImageUrl = iprot.readString();
              struct.setImageUrlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // LIST_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.ListPrice = iprot.readI64();
              struct.setListPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // LOWEST_NEW_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.LowestNewPrice = iprot.readI64();
              struct.setLowestNewPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // LOWEST_USED_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.LowestUsedPrice = iprot.readI64();
              struct.setLowestUsedPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // OFFER_PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.OfferPrice = iprot.readI64();
              struct.setOfferPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Item struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(RANK_FIELD_DESC);
      oprot.writeI64(struct.Rank);
      oprot.writeFieldEnd();
      if (struct.ASIN != null) {
        oprot.writeFieldBegin(ASIN_FIELD_DESC);
        oprot.writeString(struct.ASIN);
        oprot.writeFieldEnd();
      }
      if (struct.Title != null) {
        oprot.writeFieldBegin(TITLE_FIELD_DESC);
        oprot.writeString(struct.Title);
        oprot.writeFieldEnd();
      }
      if (struct.Release != null) {
        oprot.writeFieldBegin(RELEASE_FIELD_DESC);
        oprot.writeString(struct.Release);
        oprot.writeFieldEnd();
      }
      if (struct.ItemUrl != null) {
        oprot.writeFieldBegin(ITEM_URL_FIELD_DESC);
        oprot.writeString(struct.ItemUrl);
        oprot.writeFieldEnd();
      }
      if (struct.ImageUrl != null) {
        oprot.writeFieldBegin(IMAGE_URL_FIELD_DESC);
        oprot.writeString(struct.ImageUrl);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(LIST_PRICE_FIELD_DESC);
      oprot.writeI64(struct.ListPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LOWEST_NEW_PRICE_FIELD_DESC);
      oprot.writeI64(struct.LowestNewPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LOWEST_USED_PRICE_FIELD_DESC);
      oprot.writeI64(struct.LowestUsedPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(OFFER_PRICE_FIELD_DESC);
      oprot.writeI64(struct.OfferPrice);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ItemTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ItemTupleScheme getScheme() {
      return new ItemTupleScheme();
    }
  }

  private static class ItemTupleScheme extends org.apache.thrift.scheme.TupleScheme<Item> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Item struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetRank()) {
        optionals.set(0);
      }
      if (struct.isSetASIN()) {
        optionals.set(1);
      }
      if (struct.isSetTitle()) {
        optionals.set(2);
      }
      if (struct.isSetRelease()) {
        optionals.set(3);
      }
      if (struct.isSetItemUrl()) {
        optionals.set(4);
      }
      if (struct.isSetImageUrl()) {
        optionals.set(5);
      }
      if (struct.isSetListPrice()) {
        optionals.set(6);
      }
      if (struct.isSetLowestNewPrice()) {
        optionals.set(7);
      }
      if (struct.isSetLowestUsedPrice()) {
        optionals.set(8);
      }
      if (struct.isSetOfferPrice()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetRank()) {
        oprot.writeI64(struct.Rank);
      }
      if (struct.isSetASIN()) {
        oprot.writeString(struct.ASIN);
      }
      if (struct.isSetTitle()) {
        oprot.writeString(struct.Title);
      }
      if (struct.isSetRelease()) {
        oprot.writeString(struct.Release);
      }
      if (struct.isSetItemUrl()) {
        oprot.writeString(struct.ItemUrl);
      }
      if (struct.isSetImageUrl()) {
        oprot.writeString(struct.ImageUrl);
      }
      if (struct.isSetListPrice()) {
        oprot.writeI64(struct.ListPrice);
      }
      if (struct.isSetLowestNewPrice()) {
        oprot.writeI64(struct.LowestNewPrice);
      }
      if (struct.isSetLowestUsedPrice()) {
        oprot.writeI64(struct.LowestUsedPrice);
      }
      if (struct.isSetOfferPrice()) {
        oprot.writeI64(struct.OfferPrice);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Item struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.Rank = iprot.readI64();
        struct.setRankIsSet(true);
      }
      if (incoming.get(1)) {
        struct.ASIN = iprot.readString();
        struct.setASINIsSet(true);
      }
      if (incoming.get(2)) {
        struct.Title = iprot.readString();
        struct.setTitleIsSet(true);
      }
      if (incoming.get(3)) {
        struct.Release = iprot.readString();
        struct.setReleaseIsSet(true);
      }
      if (incoming.get(4)) {
        struct.ItemUrl = iprot.readString();
        struct.setItemUrlIsSet(true);
      }
      if (incoming.get(5)) {
        struct.ImageUrl = iprot.readString();
        struct.setImageUrlIsSet(true);
      }
      if (incoming.get(6)) {
        struct.ListPrice = iprot.readI64();
        struct.setListPriceIsSet(true);
      }
      if (incoming.get(7)) {
        struct.LowestNewPrice = iprot.readI64();
        struct.setLowestNewPriceIsSet(true);
      }
      if (incoming.get(8)) {
        struct.LowestUsedPrice = iprot.readI64();
        struct.setLowestUsedPriceIsSet(true);
      }
      if (incoming.get(9)) {
        struct.OfferPrice = iprot.readI64();
        struct.setOfferPriceIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

