//
// Autogenerated by Thrift Compiler (1.0.0-dev)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;


var ttypes = require('./fuji.item_types');
//HELPER FUNCTIONS AND STRUCTURES

var ItemService_NewReleases_args = function(args) {
  this.node_id = null;
  if (args) {
    if (args.node_id !== undefined && args.node_id !== null) {
      this.node_id = args.node_id;
    }
  }
};
ItemService_NewReleases_args.prototype = {};
ItemService_NewReleases_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.node_id = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ItemService_NewReleases_args.prototype.write = function(output) {
  output.writeStructBegin('ItemService_NewReleases_args');
  if (this.node_id !== null && this.node_id !== undefined) {
    output.writeFieldBegin('node_id', Thrift.Type.I64, 1);
    output.writeI64(this.node_id);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ItemService_NewReleases_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.Tops]);
    }
  }
};
ItemService_NewReleases_result.prototype = {};
ItemService_NewReleases_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size0 = 0;
        var _rtmp34;
        this.success = [];
        var _etype3 = 0;
        _rtmp34 = input.readListBegin();
        _etype3 = _rtmp34.etype;
        _size0 = _rtmp34.size;
        for (var _i5 = 0; _i5 < _size0; ++_i5)
        {
          var elem6 = null;
          elem6 = new ttypes.Tops();
          elem6.read(input);
          this.success.push(elem6);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ItemService_NewReleases_result.prototype.write = function(output) {
  output.writeStructBegin('ItemService_NewReleases_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter7 in this.success)
    {
      if (this.success.hasOwnProperty(iter7))
      {
        iter7 = this.success[iter7];
        iter7.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ItemService_BestSellers_args = function(args) {
  this.node_id = null;
  if (args) {
    if (args.node_id !== undefined && args.node_id !== null) {
      this.node_id = args.node_id;
    }
  }
};
ItemService_BestSellers_args.prototype = {};
ItemService_BestSellers_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.node_id = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ItemService_BestSellers_args.prototype.write = function(output) {
  output.writeStructBegin('ItemService_BestSellers_args');
  if (this.node_id !== null && this.node_id !== undefined) {
    output.writeFieldBegin('node_id', Thrift.Type.I64, 1);
    output.writeI64(this.node_id);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ItemService_BestSellers_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.Tops]);
    }
  }
};
ItemService_BestSellers_result.prototype = {};
ItemService_BestSellers_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size8 = 0;
        var _rtmp312;
        this.success = [];
        var _etype11 = 0;
        _rtmp312 = input.readListBegin();
        _etype11 = _rtmp312.etype;
        _size8 = _rtmp312.size;
        for (var _i13 = 0; _i13 < _size8; ++_i13)
        {
          var elem14 = null;
          elem14 = new ttypes.Tops();
          elem14.read(input);
          this.success.push(elem14);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ItemService_BestSellers_result.prototype.write = function(output) {
  output.writeStructBegin('ItemService_BestSellers_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter15 in this.success)
    {
      if (this.success.hasOwnProperty(iter15))
      {
        iter15 = this.success[iter15];
        iter15.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ItemService_ReleaseDate_args = function(args) {
  this.node_id = null;
  this.category = null;
  this.page = null;
  if (args) {
    if (args.node_id !== undefined && args.node_id !== null) {
      this.node_id = args.node_id;
    }
    if (args.category !== undefined && args.category !== null) {
      this.category = args.category;
    }
    if (args.page !== undefined && args.page !== null) {
      this.page = args.page;
    }
  }
};
ItemService_ReleaseDate_args.prototype = {};
ItemService_ReleaseDate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.node_id = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.category = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I64) {
        this.page = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ItemService_ReleaseDate_args.prototype.write = function(output) {
  output.writeStructBegin('ItemService_ReleaseDate_args');
  if (this.node_id !== null && this.node_id !== undefined) {
    output.writeFieldBegin('node_id', Thrift.Type.I64, 1);
    output.writeI64(this.node_id);
    output.writeFieldEnd();
  }
  if (this.category !== null && this.category !== undefined) {
    output.writeFieldBegin('category', Thrift.Type.STRING, 2);
    output.writeString(this.category);
    output.writeFieldEnd();
  }
  if (this.page !== null && this.page !== undefined) {
    output.writeFieldBegin('page', Thrift.Type.I64, 3);
    output.writeI64(this.page);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ItemService_ReleaseDate_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.Item]);
    }
  }
};
ItemService_ReleaseDate_result.prototype = {};
ItemService_ReleaseDate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size16 = 0;
        var _rtmp320;
        this.success = [];
        var _etype19 = 0;
        _rtmp320 = input.readListBegin();
        _etype19 = _rtmp320.etype;
        _size16 = _rtmp320.size;
        for (var _i21 = 0; _i21 < _size16; ++_i21)
        {
          var elem22 = null;
          elem22 = new ttypes.Item();
          elem22.read(input);
          this.success.push(elem22);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ItemService_ReleaseDate_result.prototype.write = function(output) {
  output.writeStructBegin('ItemService_ReleaseDate_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter23 in this.success)
    {
      if (this.success.hasOwnProperty(iter23))
      {
        iter23 = this.success[iter23];
        iter23.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ItemService_SalesRanking_args = function(args) {
  this.node_id = null;
  this.category = null;
  this.page = null;
  if (args) {
    if (args.node_id !== undefined && args.node_id !== null) {
      this.node_id = args.node_id;
    }
    if (args.category !== undefined && args.category !== null) {
      this.category = args.category;
    }
    if (args.page !== undefined && args.page !== null) {
      this.page = args.page;
    }
  }
};
ItemService_SalesRanking_args.prototype = {};
ItemService_SalesRanking_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.node_id = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.category = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I64) {
        this.page = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ItemService_SalesRanking_args.prototype.write = function(output) {
  output.writeStructBegin('ItemService_SalesRanking_args');
  if (this.node_id !== null && this.node_id !== undefined) {
    output.writeFieldBegin('node_id', Thrift.Type.I64, 1);
    output.writeI64(this.node_id);
    output.writeFieldEnd();
  }
  if (this.category !== null && this.category !== undefined) {
    output.writeFieldBegin('category', Thrift.Type.STRING, 2);
    output.writeString(this.category);
    output.writeFieldEnd();
  }
  if (this.page !== null && this.page !== undefined) {
    output.writeFieldBegin('page', Thrift.Type.I64, 3);
    output.writeI64(this.page);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ItemService_SalesRanking_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.Item]);
    }
  }
};
ItemService_SalesRanking_result.prototype = {};
ItemService_SalesRanking_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size24 = 0;
        var _rtmp328;
        this.success = [];
        var _etype27 = 0;
        _rtmp328 = input.readListBegin();
        _etype27 = _rtmp328.etype;
        _size24 = _rtmp328.size;
        for (var _i29 = 0; _i29 < _size24; ++_i29)
        {
          var elem30 = null;
          elem30 = new ttypes.Item();
          elem30.read(input);
          this.success.push(elem30);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ItemService_SalesRanking_result.prototype.write = function(output) {
  output.writeStructBegin('ItemService_SalesRanking_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter31 in this.success)
    {
      if (this.success.hasOwnProperty(iter31))
      {
        iter31 = this.success[iter31];
        iter31.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ItemService_ItemLookup_args = function(args) {
  this.item_id = null;
  this.id_type = null;
  if (args) {
    if (args.item_id !== undefined && args.item_id !== null) {
      this.item_id = args.item_id;
    }
    if (args.id_type !== undefined && args.id_type !== null) {
      this.id_type = args.id_type;
    }
  }
};
ItemService_ItemLookup_args.prototype = {};
ItemService_ItemLookup_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.item_id = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.id_type = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ItemService_ItemLookup_args.prototype.write = function(output) {
  output.writeStructBegin('ItemService_ItemLookup_args');
  if (this.item_id !== null && this.item_id !== undefined) {
    output.writeFieldBegin('item_id', Thrift.Type.STRING, 1);
    output.writeString(this.item_id);
    output.writeFieldEnd();
  }
  if (this.id_type !== null && this.id_type !== undefined) {
    output.writeFieldBegin('id_type', Thrift.Type.STRING, 2);
    output.writeString(this.id_type);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ItemService_ItemLookup_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.Item]);
    }
  }
};
ItemService_ItemLookup_result.prototype = {};
ItemService_ItemLookup_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size32 = 0;
        var _rtmp336;
        this.success = [];
        var _etype35 = 0;
        _rtmp336 = input.readListBegin();
        _etype35 = _rtmp336.etype;
        _size32 = _rtmp336.size;
        for (var _i37 = 0; _i37 < _size32; ++_i37)
        {
          var elem38 = null;
          elem38 = new ttypes.Item();
          elem38.read(input);
          this.success.push(elem38);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ItemService_ItemLookup_result.prototype.write = function(output) {
  output.writeStructBegin('ItemService_ItemLookup_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter39 in this.success)
    {
      if (this.success.hasOwnProperty(iter39))
      {
        iter39 = this.success[iter39];
        iter39.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ItemService_ItemList_args = function(args) {
  this.keyword = null;
  this.page = null;
  if (args) {
    if (args.keyword !== undefined && args.keyword !== null) {
      this.keyword = args.keyword;
    }
    if (args.page !== undefined && args.page !== null) {
      this.page = args.page;
    }
  }
};
ItemService_ItemList_args.prototype = {};
ItemService_ItemList_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.keyword = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.page = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ItemService_ItemList_args.prototype.write = function(output) {
  output.writeStructBegin('ItemService_ItemList_args');
  if (this.keyword !== null && this.keyword !== undefined) {
    output.writeFieldBegin('keyword', Thrift.Type.STRING, 1);
    output.writeString(this.keyword);
    output.writeFieldEnd();
  }
  if (this.page !== null && this.page !== undefined) {
    output.writeFieldBegin('page', Thrift.Type.I64, 2);
    output.writeI64(this.page);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ItemService_ItemList_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.Item]);
    }
  }
};
ItemService_ItemList_result.prototype = {};
ItemService_ItemList_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size40 = 0;
        var _rtmp344;
        this.success = [];
        var _etype43 = 0;
        _rtmp344 = input.readListBegin();
        _etype43 = _rtmp344.etype;
        _size40 = _rtmp344.size;
        for (var _i45 = 0; _i45 < _size40; ++_i45)
        {
          var elem46 = null;
          elem46 = new ttypes.Item();
          elem46.read(input);
          this.success.push(elem46);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ItemService_ItemList_result.prototype.write = function(output) {
  output.writeStructBegin('ItemService_ItemList_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter47 in this.success)
    {
      if (this.success.hasOwnProperty(iter47))
      {
        iter47 = this.success[iter47];
        iter47.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ItemService_NodeList_args = function(args) {
  this.node_id = null;
  if (args) {
    if (args.node_id !== undefined && args.node_id !== null) {
      this.node_id = args.node_id;
    }
  }
};
ItemService_NodeList_args.prototype = {};
ItemService_NodeList_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I64) {
        this.node_id = input.readI64();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ItemService_NodeList_args.prototype.write = function(output) {
  output.writeStructBegin('ItemService_NodeList_args');
  if (this.node_id !== null && this.node_id !== undefined) {
    output.writeFieldBegin('node_id', Thrift.Type.I64, 1);
    output.writeI64(this.node_id);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ItemService_NodeList_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.Node]);
    }
  }
};
ItemService_NodeList_result.prototype = {};
ItemService_NodeList_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size48 = 0;
        var _rtmp352;
        this.success = [];
        var _etype51 = 0;
        _rtmp352 = input.readListBegin();
        _etype51 = _rtmp352.etype;
        _size48 = _rtmp352.size;
        for (var _i53 = 0; _i53 < _size48; ++_i53)
        {
          var elem54 = null;
          elem54 = new ttypes.Node();
          elem54.read(input);
          this.success.push(elem54);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

ItemService_NodeList_result.prototype.write = function(output) {
  output.writeStructBegin('ItemService_NodeList_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter55 in this.success)
    {
      if (this.success.hasOwnProperty(iter55))
      {
        iter55 = this.success[iter55];
        iter55.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var ItemServiceClient = exports.Client = function(output, pClass) {
    this.output = output;
    this.pClass = pClass;
    this._seqid = 0;
    this._reqs = {};
};
ItemServiceClient.prototype = {};
ItemServiceClient.prototype.seqid = function() { return this._seqid; };
ItemServiceClient.prototype.new_seqid = function() { return this._seqid += 1; };
ItemServiceClient.prototype.NewReleases = function(node_id, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_NewReleases(node_id);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_NewReleases(node_id);
  }
};

ItemServiceClient.prototype.send_NewReleases = function(node_id) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('NewReleases', Thrift.MessageType.CALL, this.seqid());
  var params = {
    node_id: node_id
  };
  var args = new ItemService_NewReleases_args(params);
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ItemServiceClient.prototype.recv_NewReleases = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ItemService_NewReleases_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('NewReleases failed: unknown result');
};
ItemServiceClient.prototype.BestSellers = function(node_id, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_BestSellers(node_id);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_BestSellers(node_id);
  }
};

ItemServiceClient.prototype.send_BestSellers = function(node_id) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('BestSellers', Thrift.MessageType.CALL, this.seqid());
  var params = {
    node_id: node_id
  };
  var args = new ItemService_BestSellers_args(params);
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ItemServiceClient.prototype.recv_BestSellers = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ItemService_BestSellers_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('BestSellers failed: unknown result');
};
ItemServiceClient.prototype.ReleaseDate = function(node_id, category, page, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_ReleaseDate(node_id, category, page);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_ReleaseDate(node_id, category, page);
  }
};

ItemServiceClient.prototype.send_ReleaseDate = function(node_id, category, page) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('ReleaseDate', Thrift.MessageType.CALL, this.seqid());
  var params = {
    node_id: node_id,
    category: category,
    page: page
  };
  var args = new ItemService_ReleaseDate_args(params);
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ItemServiceClient.prototype.recv_ReleaseDate = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ItemService_ReleaseDate_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('ReleaseDate failed: unknown result');
};
ItemServiceClient.prototype.SalesRanking = function(node_id, category, page, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_SalesRanking(node_id, category, page);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_SalesRanking(node_id, category, page);
  }
};

ItemServiceClient.prototype.send_SalesRanking = function(node_id, category, page) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('SalesRanking', Thrift.MessageType.CALL, this.seqid());
  var params = {
    node_id: node_id,
    category: category,
    page: page
  };
  var args = new ItemService_SalesRanking_args(params);
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ItemServiceClient.prototype.recv_SalesRanking = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ItemService_SalesRanking_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('SalesRanking failed: unknown result');
};
ItemServiceClient.prototype.ItemLookup = function(item_id, id_type, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_ItemLookup(item_id, id_type);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_ItemLookup(item_id, id_type);
  }
};

ItemServiceClient.prototype.send_ItemLookup = function(item_id, id_type) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('ItemLookup', Thrift.MessageType.CALL, this.seqid());
  var params = {
    item_id: item_id,
    id_type: id_type
  };
  var args = new ItemService_ItemLookup_args(params);
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ItemServiceClient.prototype.recv_ItemLookup = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ItemService_ItemLookup_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('ItemLookup failed: unknown result');
};
ItemServiceClient.prototype.ItemList = function(keyword, page, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_ItemList(keyword, page);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_ItemList(keyword, page);
  }
};

ItemServiceClient.prototype.send_ItemList = function(keyword, page) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('ItemList', Thrift.MessageType.CALL, this.seqid());
  var params = {
    keyword: keyword,
    page: page
  };
  var args = new ItemService_ItemList_args(params);
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ItemServiceClient.prototype.recv_ItemList = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ItemService_ItemList_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('ItemList failed: unknown result');
};
ItemServiceClient.prototype.NodeList = function(node_id, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_NodeList(node_id);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_NodeList(node_id);
  }
};

ItemServiceClient.prototype.send_NodeList = function(node_id) {
  var output = new this.pClass(this.output);
  output.writeMessageBegin('NodeList', Thrift.MessageType.CALL, this.seqid());
  var params = {
    node_id: node_id
  };
  var args = new ItemService_NodeList_args(params);
  args.write(output);
  output.writeMessageEnd();
  return this.output.flush();
};

ItemServiceClient.prototype.recv_NodeList = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new ItemService_NodeList_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('NodeList failed: unknown result');
};
var ItemServiceProcessor = exports.Processor = function(handler) {
  this._handler = handler;
}
;
ItemServiceProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
}
;
ItemServiceProcessor.prototype.process_NewReleases = function(seqid, input, output) {
  var args = new ItemService_NewReleases_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.NewReleases.length === 1) {
    Q.fcall(this._handler.NewReleases.bind(this._handler), args.node_id)
      .then(function(result) {
        var result_obj = new ItemService_NewReleases_result({success: result});
        output.writeMessageBegin("NewReleases", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("NewReleases", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.NewReleases(args.node_id, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new ItemService_NewReleases_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("NewReleases", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("NewReleases", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
ItemServiceProcessor.prototype.process_BestSellers = function(seqid, input, output) {
  var args = new ItemService_BestSellers_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.BestSellers.length === 1) {
    Q.fcall(this._handler.BestSellers.bind(this._handler), args.node_id)
      .then(function(result) {
        var result_obj = new ItemService_BestSellers_result({success: result});
        output.writeMessageBegin("BestSellers", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("BestSellers", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.BestSellers(args.node_id, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new ItemService_BestSellers_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("BestSellers", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("BestSellers", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
ItemServiceProcessor.prototype.process_ReleaseDate = function(seqid, input, output) {
  var args = new ItemService_ReleaseDate_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.ReleaseDate.length === 3) {
    Q.fcall(this._handler.ReleaseDate.bind(this._handler), args.node_id, args.category, args.page)
      .then(function(result) {
        var result_obj = new ItemService_ReleaseDate_result({success: result});
        output.writeMessageBegin("ReleaseDate", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("ReleaseDate", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.ReleaseDate(args.node_id, args.category, args.page, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new ItemService_ReleaseDate_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("ReleaseDate", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("ReleaseDate", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
ItemServiceProcessor.prototype.process_SalesRanking = function(seqid, input, output) {
  var args = new ItemService_SalesRanking_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.SalesRanking.length === 3) {
    Q.fcall(this._handler.SalesRanking.bind(this._handler), args.node_id, args.category, args.page)
      .then(function(result) {
        var result_obj = new ItemService_SalesRanking_result({success: result});
        output.writeMessageBegin("SalesRanking", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("SalesRanking", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.SalesRanking(args.node_id, args.category, args.page, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new ItemService_SalesRanking_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("SalesRanking", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("SalesRanking", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
ItemServiceProcessor.prototype.process_ItemLookup = function(seqid, input, output) {
  var args = new ItemService_ItemLookup_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.ItemLookup.length === 2) {
    Q.fcall(this._handler.ItemLookup.bind(this._handler), args.item_id, args.id_type)
      .then(function(result) {
        var result_obj = new ItemService_ItemLookup_result({success: result});
        output.writeMessageBegin("ItemLookup", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("ItemLookup", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.ItemLookup(args.item_id, args.id_type, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new ItemService_ItemLookup_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("ItemLookup", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("ItemLookup", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
ItemServiceProcessor.prototype.process_ItemList = function(seqid, input, output) {
  var args = new ItemService_ItemList_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.ItemList.length === 2) {
    Q.fcall(this._handler.ItemList.bind(this._handler), args.keyword, args.page)
      .then(function(result) {
        var result_obj = new ItemService_ItemList_result({success: result});
        output.writeMessageBegin("ItemList", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("ItemList", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.ItemList(args.keyword, args.page, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new ItemService_ItemList_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("ItemList", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("ItemList", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
ItemServiceProcessor.prototype.process_NodeList = function(seqid, input, output) {
  var args = new ItemService_NodeList_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.NodeList.length === 1) {
    Q.fcall(this._handler.NodeList.bind(this._handler), args.node_id)
      .then(function(result) {
        var result_obj = new ItemService_NodeList_result({success: result});
        output.writeMessageBegin("NodeList", Thrift.MessageType.REPLY, seqid);
        result_obj.write(output);
        output.writeMessageEnd();
        output.flush();
      }, function (err) {
        var result;
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("NodeList", Thrift.MessageType.EXCEPTION, seqid);
        result.write(output);
        output.writeMessageEnd();
        output.flush();
      });
  } else {
    this._handler.NodeList(args.node_id, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new ItemService_NodeList_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("NodeList", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("NodeList", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
